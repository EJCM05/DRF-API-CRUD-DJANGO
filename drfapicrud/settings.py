"""
Django settings for drfapicrud project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from django.core.exceptions import ImproperlyConfigured
import environ # Para leer variables de .env en desarrollo
import dj_database_url # Para configurar la base de datos

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Configuración de Environ (para .env local) ---
# Inicializa django-environ
env = environ.Env(
    DATABASE_URL=(str, ''),
    SECRET_KEY=(str, ''),
    DEBUG=(bool, False),
    RENDER_EXTERNAL_HOSTNAME=(str, ''),
)

# Lee el archivo .env si existe.
# Por defecto, django-environ busca '.env' en el directorio de trabajo actual (donde se ejecuta manage.py).
# Si tu .env no está directamente al lado de manage.py, podrías necesitar una ruta explícita:
# environ.Env.read_env(os.path.join(BASE_DIR.parent, '.env')) # Si .env está en el directorio padre
environ.Env.read_env()

# --- Configuración de Seguridad y Depuración ---
SECRET_KEY = env('SECRET_KEY')

# La validación se mantiene, si SECRET_KEY es una cadena vacía o None, se lanzará el error.
if not SECRET_KEY:
    raise ImproperlyConfigured("La variable de entorno 'SECRET_KEY' no está configurada.")

DEBUG = env('DEBUG')

# Capa de seguridad adicional para asegurarse de que DEBUG esté desactivado en producción.
if 'RENDER' in os.environ:
    DEBUG = False

RENDER_EXTERNAL_HOSTNAME = env('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS = [RENDER_EXTERNAL_HOSTNAME]
else:
    ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# --- Definición de Aplicaciones ---
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'projectsApi',
    'rest_framework',
]

# --- Middleware ---
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'drfapicrud.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', # Añade esta línea si no la tienes
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages', # Asegúrate de que esta línea esté EXACTA
            ],
        },
    },
]

WSGI_APPLICATION = 'drfapicrud.wsgi.application'

# --- Configuración de Base de Datos ---
DATABASES = {
    'default': dj_database_url.config(
        default=env('DATABASE_URL'),
        conn_max_age=600
    )
}

if not DATABASES['default']:
    raise ImproperlyConfigured("La variable de entorno 'DATABASE_URL' no está configurada o es inválida.")

# --- Validación de Contraseña ---
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# --- Internacionalización ---
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# --- Archivos Estáticos ---
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'